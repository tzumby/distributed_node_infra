---
- hosts: nodes
  become: true
  vars_prompt:
  - name: aws_access_key_id
    prompt: Enter AWS_ACCESS_KEY_ID
  - name: aws_secret_access_key
    prompt: Enter AWS_SECRET_ACCESS_KEY
  - name: rabbitmq_url
    prompt: Enter RABBITMQ_URL
  - name: appsignal_api_key
    prompt: Enter APPSIGNAL_API_KEY
  vars:
    users:
      - name: tzumby
        # generated using openssl passwd -salt <salt> -1 <plaintext>
        password: '$1$testingt$cUm94st/Mxuw/PHyun8lp0'
        pub_keys:
          - templates/users/tzumby/key.pub
    sysctl_overwrite:
      # Enable IPv4 traffic forwarding.
      net.ipv4.ip_forward: 1
  roles:
    - users
  tasks:
    - name: Upload application
      ansible.builtin.unarchive:
        src: /home/tzumby/distributed_node/_build/dev/distributed_node-0.1.0.tar.gz
        dest: /opt

    - name: Add AWS variables to bashrc
      ansible.builtin.blockinfile:
        dest: "/home/tzumby/.bashrc"
        block: |
          export AWS_ACCESS_KEY_ID={{ aws_access_key_id  }}
          export AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}
          export RABBITMQ_URL={{ rabbitmq_url }}
          export APPSIGNAL_API_KEY={{ appsignal_api_key }}
        marker: '# {mark} ANSIBLE MANAGED BLOCK - virtualenv'
        insertbefore: BOF
        create: yes

    - name: template systemd unit file
      ansible.builtin.template:
        src: templates/distributed_node.service.j2
        dest: /etc/systemd/system/distributed_node.service
        owner: root
        group: root
        mode: 0755

    - name: template systemd unit file
      ansible.builtin.template:
        src: templates/distributed_node_env.j2
        dest: /etc/distributed_node_env
        owner: root
        group: root
        mode: 0755

    - name: Make sure distributed node is running
      ansible.builtin.systemd:
        state: started
        name: distributed_node
